<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) [2013] [The FURTHeR Project]

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:core="http://further.utah.edu/schema/core"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://camel.apache.org/schema/spring
	http://camel.apache.org/schema/spring/camel-spring.xsd
	http://further.utah.edu/schema/core
	http://further.utah.edu/schema/core/core.xsd">


	<!-- =============== -->
	<!-- Library imports -->
	<!-- =============== -->

	<import resource="classpath*:META-INF/core/xquery/core-xquery-datasource.xml" />
	<import resource="classpath*:META-INF/ds/impl/ds-impl-context-attributes.xml" />
	<import resource="classpath*:META-INF/ds/test/ds-test-dts-ws-server-context.xml" />
	<import resource="classpath*:META-INF/ds/test/ds-test-mdr-ws-server-context.xml" />

	<!-- Sets the TrAX implementation -->
	<!-- Dustin email correspondence: implementation must be Saxon. I originally 
		tried Xerces (included in the JDK) and it wouldn't correctly parse the Schematron 
		XSLT, it failed with errors related to some function that XSLT uses and since 
		all of the Schematron examples used Saxon, I gave that a try and it worked 
		perfectly. If you can find another implementation that doesn't cause any 
		errors with Schematron, you can replace it, else, yes, please add the TF 
		back to Saxon. -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="java.lang.System.setProperty" />
		<property name="arguments">
			<list>
				<value>javax.xml.transform.TransformerFactory</value>
				<value>net.sf.saxon.TransformerFactoryImpl</value>
			</list>
		</property>
	</bean>

	<!-- Transformer Factory -->
	<bean id="transformerFactory" class="javax.xml.transform.TransformerFactory"
		factory-method="newInstance">
		<property name="URIResolver">
			<bean
				class="edu.utah.further.core.xml.transform.SpringClasspathUriResolver" />
		</property>
	</bean>

	<!-- An abstract templates for XSLT Templates -->
	<bean id="abstractTemplates"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		abstract="true">
		<property name="targetObject" ref="transformerFactory" />
		<property name="targetMethod" value="newTemplates" />
	</bean>

	<!-- Step 1: Include - Macro processor to assemble the schema from various 
		parts -->
	<bean id="templatesInclude" parent="abstractTemplates">
		<property name="arguments">
			<list>
				<bean class="javax.xml.transform.stream.StreamSource">
					<constructor-arg index="0" type="java.io.InputStream"
						value="classpath:edu/utah/further/ds/impl/validation/iso_dsdl_include.xsl" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Step 2: Expand - Macro processor to convert abstract patterns to real 
		patterns. -->
	<bean id="templatesExpand" parent="abstractTemplates">
		<property name="arguments">
			<list>
				<bean class="javax.xml.transform.stream.StreamSource">
					<constructor-arg index="0" type="java.io.InputStream"
						value="classpath:edu/utah/further/ds/impl/validation/iso_abstract_expand.xsl" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- Step 3 Compile - Compile the Schematron schema into an XSLT script -->
	<bean id="templatesCompile" parent="abstractTemplates">
		<property name="arguments">
			<list>
				<bean class="javax.xml.transform.stream.StreamSource">
					<constructor-arg index="0" type="java.io.InputStream"
						value="classpath:edu/utah/further/ds/impl/validation/iso_svrl_for_xslt2.xsl" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- =========================================== -->
	<!-- Link Configuration -->
	<!-- =========================================== -->

	<!-- Hard coded for tests -->
	<core:long id="masterNamespaceId" value="32774" />

	<!-- ============================================ -->
	<!-- Marshalling/Unmarshalling Request Processors -->
	<!-- ============================================ -->

	<!-- Wired by default with AttributeName enums -->
	<bean id="marshallRequestProcessor"
		class="edu.utah.further.core.xml.chain.MarshallRequestProcessorImpl"
		scope="prototype" p:sourceAttr-ref="marshallSourceAttr"
		p:resultAttr-ref="marshallResultAttr" p:schemaAttr-ref="resultSchemaAttr" />

	<!-- Wired by default with AttributeName enums -->
	<bean id="unmarshallRequestProcessor"
		class="edu.utah.further.core.xml.chain.UnmarshallRequestProcessorImpl"
		scope="prototype" p:sourceAttr-ref="unmarshallSourceAttr"
		p:resultAttr-ref="unmarshallResultAttr" p:jaxbPackageAttr-ref="unmarshallPkgAttr" />

	<!-- ============================================= -->
	<!-- Reusable Persistent Processors -->
	<!-- ============================================= -->

	<!-- Wired by default with AttributeName enum -->
	<bean id="persistenceRp"
		class="edu.utah.further.ds.impl.service.query.processor.PersistenceQp"
		scope="prototype" p:sourceAttr-ref="persistentEntitiesAttr"
		p:resultAttr="queryResultAttr" p:delegate-ref="persisterCreate" />
</beans>